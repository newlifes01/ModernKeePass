<Page
    x:Class="ModernKeePass.Views.EntriesPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:viewModels="using:ModernKeePass.ViewModels"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:actions="using:ModernKeePass.Actions"
    xmlns:converters="using:ModernKeePass.Converters"
    mc:Ignorable="d"
    Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">

    <Page.Resources>
        <converters:IntToSymbolConverter x:Key="IntToSymbolConverter"/>
        <converters:ColorToBrushConverter x:Key="ColorToBrushConverter"/>
    </Page.Resources>

    <SplitView x:Name="SplitView"
        OpenPaneLength="490"
        IsPaneOpen="True" 
        DisplayMode="Inline">
        <SplitView.Pane>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <!-- Command Bar -->
                <CommandBar
                    DefaultLabelPosition="Right"
                    Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
                    HorizontalAlignment="Stretch"
                    FontFamily="Segoe UI">
                    <AppBarButton x:Name="AddEntryButton"  x:Uid="AppBarAddEntry" Icon="Add">
                        <interactivity:Interaction.Behaviors>
                            <core:EventTriggerBehavior EventName="Click">
                                <core:ChangePropertyAction TargetObject="{Binding ElementName=NewEntryNameTextBox}" PropertyName="Visibility" Value="Visible"/>
                                <core:ChangePropertyAction TargetObject="{Binding ElementName=AddEntryButton}" PropertyName="IsEnabled" Value="False"/>
                                <actions:SetupFocusAction TargetObject="{Binding ElementName=NewEntryNameTextBox}" />
                            </core:EventTriggerBehavior>
                        </interactivity:Interaction.Behaviors>
                    </AppBarButton>
                </CommandBar>
                <TextBox Grid.Row="1" x:Name="NewEntryNameTextBox" Visibility="Collapsed" KeyUp="NewEntryNameTextBox_OnKeyDown" />
                <ListView 
                    Grid.Row="2" 
                    ItemsSource="{x:Bind ViewModel.Entries}" 
                    CanReorderItems="True"
                    CanDragItems="True"
                    AllowDrop="True"
                    BorderThickness="0,1,0,0" 
                    Background="{StaticResource ApplicationPageBackgroundThemeBrush}"
                    SelectionChanged="ListView_SelectionChanged">
                    <!--<ListView.ItemContainerStyle>
                        <Style TargetType="ListViewItem">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="ListViewItem">
                                        <Border Name="Border" BorderBrush="Silver" BorderThickness="1">
                                            <ContentPresenter />
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ListView.ItemContainerStyle>-->
                    <ListView.ItemTemplate>
                        <DataTemplate x:DataType="viewModels:EntryItem">
                            <Grid x:Name="EntryGrid" HorizontalAlignment="Stretch">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <SymbolIcon Grid.Column="0" Symbol="{x:Bind IconId, Converter={StaticResource IntToSymbolConverter}, ConverterParameter=0}" Foreground="{StaticResource SystemControlPageTextBaseHighBrush}" />
                                <StackPanel Grid.Column="1" VerticalAlignment="Top" Margin="15">
                                    <TextBlock Text="{x:Bind Name}" TextWrapping="NoWrap" Foreground="{Binding ForegroundColor, ConverterParameter={StaticResource SystemControlPageTextBaseHighBrush}, Converter={StaticResource ColorToBrushConverter}}"/>
                                    <TextBlock Text="{x:Bind UserName}" Foreground="{Binding ForegroundColor, ConverterParameter={StaticResource SystemControlPageTextBaseMediumBrush}, Converter={StaticResource ColorToBrushConverter}}" MaxHeight="60" />
                                    <TextBlock Text="{x:Bind Url}" Foreground="{Binding ForegroundColor, ConverterParameter={StaticResource SystemControlPageTextBaseMediumBrush}, Converter={StaticResource ColorToBrushConverter}}" MaxHeight="60" />
                                </StackPanel>
                                <Grid.ContextFlyout>
                                    <MenuFlyout>
                                        <MenuFlyoutItem x:Uid="EntryItemCopyLogin" Icon="Page2">
                                            <interactivity:Interaction.Behaviors>
                                                <core:EventTriggerBehavior EventName="Click">
                                                    <actions:ClipboardAction Text="{x:Bind UserName}" />
                                                    <actions:ToastAction x:Uid="ToastCopyLogin" Title="{x:Bind Name}" />
                                                </core:EventTriggerBehavior>
                                            </interactivity:Interaction.Behaviors>
                                        </MenuFlyoutItem>
                                        <MenuFlyoutItem x:Uid="EntryItemCopyPassword" Icon=" ProtectedDocument">
                                            <interactivity:Interaction.Behaviors>
                                                <core:EventTriggerBehavior EventName="Click">
                                                    <actions:ClipboardAction Text="{x:Bind Password}" />
                                                    <actions:ToastAction x:Uid="ToastCopyPassword" Title="{x:Bind Name}" />
                                                </core:EventTriggerBehavior>
                                            </interactivity:Interaction.Behaviors>
                                        </MenuFlyoutItem>
                                        <MenuFlyoutItem x:Uid="EntryItemCopyUrl" Icon=" OpenFile" IsEnabled="{x:Bind HasUrl}">
                                            <interactivity:Interaction.Behaviors>
                                                <core:EventTriggerBehavior EventName="Click">
                                                    <actions:NavigateToUrlAction Url="{x:Bind Url}" />
                                                    <actions:ToastAction x:Uid="ToastCopyUrl" Title="{x:Bind Name}" />
                                                </core:EventTriggerBehavior>
                                            </interactivity:Interaction.Behaviors>
                                        </MenuFlyoutItem>
                                        <MenuFlyoutSeparator />
                                        <MenuFlyoutItem x:Uid="TopMenuDeleteFlyout" Icon="Delete" Click="DeleteFlyoutItem_OnClick" />
                                    </MenuFlyout>
                                </Grid.ContextFlyout>
                            </Grid>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
            </Grid>
        </SplitView.Pane>
        <SplitView.Content>
            <Frame x:Name="ContentFrame" Visibility="Collapsed" />
        </SplitView.Content>

        <!-- Responsive Visual States -->
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="EntrySelectedGroup" CurrentStateChanged="VisualStateGroup_OnCurrentStateChanged">

                <!-- VisualState to be triggered when window width is >=720 effective pixels -->
                <VisualState x:Name="SelectedExpanded">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="720" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="SplitView.IsPaneOpen" Value="True" />
                        <Setter Target="SplitView.DisplayMode" Value="Inline" />
                        <Setter Target="ContentFrame.Visibility" Value="Visible" />
                    </VisualState.Setters>
                </VisualState>

                <!-- VisualState to be triggered when window width is >=0 and <719 effective pixels -->
                <VisualState x:Name="SelectedMinimal">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="SplitView.IsPaneOpen" Value="False" />
                        <Setter Target="SplitView.DisplayMode" Value="Overlay" />
                        <Setter Target="ContentFrame.Visibility" Value="Visible" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
            <VisualStateGroup x:Name="EntryUnSelectedGroup" CurrentStateChanged="VisualStateGroup_OnCurrentStateChanged">

                <!-- VisualState used when no entries are selected -->
                <VisualState x:Name="Unselected">
                    <VisualState.Setters>
                        <Setter Target="SplitView.IsPaneOpen" Value="True" />
                        <Setter Target="SplitView.DisplayMode" Value="Inline" />
                        <Setter Target="ContentFrame.Visibility" Value="Collapsed" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

    </SplitView>
</Page>
