<Page
    x:Class="ModernKeePass.Views.EntryPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:userControls="using:ModernKeePass.Views.UserControls"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:actions="using:ModernKeePass.Actions"
    xmlns:converters="using:ModernKeePass.Converters"
    xmlns:viewModels="using:ModernKeePass.ViewModels"
    mc:Ignorable="d"
    Margin="0,-100,0,0"
    Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">

    <Page.Resources>
        <converters:ProgressBarLegalValuesConverter x:Key="ProgressBarLegalValuesConverter" />
        <converters:DoubleToSolidColorBrushConverter x:Key="DoubleToForegroungBrushComplexityConverter" />
        <converters:ColorToBrushConverter x:Key="ColorToBrushConverter" />
        <converters:IntToSymbolConverter x:Key="IntToSymbolConverter" />
    </Page.Resources>

    <Grid>
        <Pivot>
            <Pivot.TitleTemplate>
                <DataTemplate x:DataType="viewModels:EntryItem">
                    <Grid>
                        <TextBlock Text="{x:Bind Name}" Style="{ThemeResource HeaderTextBlockStyle}"/>
                    </Grid>
                </DataTemplate>
            </Pivot.TitleTemplate>
            <PivotItem Header="Main" Margin="0">
                <Grid Background="White">
                    <RelativePanel>
                        <StackPanel Margin="20">
                            <StackPanel.Resources>
                                <Style TargetType="TextBlock">
                                    <Setter Property="Margin" Value="0,20,0,0"/>
                                    <Setter Property="FontSize" Value="18"/>
                                    <Setter Property="TextWrapping" Value="Wrap"/>
                                </Style>
                                <Style TargetType="CheckBox">
                                    <Setter Property="Margin" Value="0,20,0,0"/>
                                    <Setter Property="FontSize" Value="18"/>
                                </Style>
                                <Style TargetType="TextBox" x:Key="EntryTextBoxWithButtonStyle">
                                    <Setter Property="Width" Value="350"/>
                                    <Setter Property="Height" Value="32"/>
                                    <Setter Property="HorizontalAlignment" Value="Left"/>
                                </Style>
                            </StackPanel.Resources>
                            <TextBlock x:Uid="EntryLogin" />
                            <TextBox
                                Text="{x:Bind ViewModel.UserName, Mode=TwoWay}" 
                                Style="{StaticResource EntryTextBoxWithButtonStyle}">
                                <interactivity:Interaction.Behaviors>
                                    <core:EventTriggerBehavior EventName="ButtonClick">
                                        <actions:ClipboardAction Text="{x:Bind ViewModel.UserName}" />
                                        <actions:ToastAction x:Uid="ToastCopyLogin" Title="{x:Bind ViewModel.Name}" />
                                    </core:EventTriggerBehavior>
                                </interactivity:Interaction.Behaviors>
                            </TextBox>
                            <TextBlock x:Uid="EntryPassword" />
                            <PasswordBox x:Name="Password" 
                                HorizontalAlignment="Left" 
                                Password="{x:Bind ViewModel.Password, Mode=TwoWay}" 
                                Width="350" 
                                Height="32" 
                                PasswordRevealMode="Hidden">
                                <interactivity:Interaction.Behaviors>
                                    <core:EventTriggerBehavior EventName="ButtonClick">
                                        <actions:ClipboardAction Text="{x:Bind ViewModel.Password}" />
                                        <actions:ToastAction x:Uid="ToastCopyPassword" Title="{x:Bind ViewModel.Name}" />
                                    </core:EventTriggerBehavior>
                                </interactivity:Interaction.Behaviors>
                            </PasswordBox>
                            <ProgressBar
                                Maximum="128" 
                                Width="350" 
                                HorizontalAlignment="Left" 
                                Value="{x:Bind ViewModel.PasswordComplexityIndicator, ConverterParameter=0\,128, Converter={StaticResource ProgressBarLegalValuesConverter}}" 
                                Foreground="{x:Bind ViewModel.PasswordComplexityIndicator, ConverterParameter=128, Converter={StaticResource DoubleToForegroungBrushComplexityConverter}}" />
                            <CheckBox 
                                x:Uid="EntryShowPassword" 
                                HorizontalAlignment="Left" 
                                Margin="0">
                                <interactivity:Interaction.Behaviors>
                                    <core:EventTriggerBehavior EventName="Checked">
                                        <core:ChangePropertyAction TargetObject="{Binding ElementName=Password}" PropertyName="PasswordRevealMode" Value="Visible" />
                                    </core:EventTriggerBehavior>
                                    <core:EventTriggerBehavior EventName="Unchecked">
                                        <core:ChangePropertyAction TargetObject="{Binding ElementName=Password}" PropertyName="PasswordRevealMode" Value="Hidden" />
                                    </core:EventTriggerBehavior>
                                </interactivity:Interaction.Behaviors>
                            </CheckBox>
                            <TextBlock TextWrapping="Wrap" Text="URL" FontSize="18"/>
                            <TextBox 
                                Text="{x:Bind ViewModel.Url, Mode=TwoWay}" 
                                MaxLength="256" 
                                Style="{StaticResource EntryTextBoxWithButtonStyle}">
                                <interactivity:Interaction.Behaviors>
                                    <core:EventTriggerBehavior EventName="ButtonClick">
                                        <actions:NavigateToUrlAction Url="{x:Bind ViewModel.Url}" />
                                    </core:EventTriggerBehavior>
                                </interactivity:Interaction.Behaviors>
                            </TextBox>
                            <TextBlock x:Uid="EntryNotes" />
                            <TextBox 
                                HorizontalAlignment="Left" 
                                TextWrapping="Wrap" 
                                Text="{x:Bind ViewModel.Notes, Mode=TwoWay}" 
                                Width="350" 
                                Height="200" 
                                AcceptsReturn="True" 
                                IsSpellCheckEnabled="True" />
                            <CheckBox 
                                x:Uid="EntryExpirationDate" 
                                IsChecked="{x:Bind ViewModel.HasExpirationDate, Mode=TwoWay}" />
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <SymbolIcon 
                                    Grid.Column="0" 
                                    Symbol="Important" 
                                    Foreground="DarkRed" 
                                    Visibility="{x:Bind ViewModel.HasExpired}">
                                    <ToolTipService.ToolTip>
                                        <ToolTip x:Uid="EntryExpirationTooltip" />
                                    </ToolTipService.ToolTip>
                                </SymbolIcon>
                                <StackPanel 
                                    Grid.Column="1" 
                                    x:Name="ExpirationDatePanel"
                                    Visibility="{x:Bind ViewModel.HasExpirationDate, Mode=OneWay}">
                                    <DatePicker 
                                        Date="{x:Bind ViewModel.ExpiryDate, Mode=TwoWay}" 
                                        Style="{StaticResource MainColorDatePicker}" />
                                    <TimePicker 
                                        Margin="0,10,0,0" 
                                        Time="{x:Bind ViewModel.ExpiryTime, Mode=TwoWay}" 
                                        Style="{StaticResource MainColorTimePicker}" />
                                </StackPanel>
                            </Grid>
                        </StackPanel>
                    </RelativePanel>
                </Grid>
            </PivotItem>
            <PivotItem Header="Additional">
                <StackPanel Orientation="Vertical">
                    <TextBlock x:Uid="EntryIcon" />
                    <userControls:SymbolPickerUserControl 
                        SelectedSymbol="{x:Bind ViewModel.IconId, Converter={StaticResource IntToSymbolConverter}, ConverterParameter=0, Mode=TwoWay}" />
                    <TextBlock x:Uid="EntryBackgroundColor" />
                    <userControls:ColorPickerUserControl 
                        HorizontalAlignment="Left"
                        SelectedColor="{x:Bind ViewModel.BackgroundColor, Converter={StaticResource ColorToBrushConverter}, Mode=TwoWay}" />
                    <TextBlock x:Uid="EntryForegroundColor" />
                    <userControls:ColorPickerUserControl 
                        SelectedColor="{x:Bind ViewModel.ForegroundColor, Converter={StaticResource ColorToBrushConverter}, Mode=TwoWay}" />
                </StackPanel>
            </PivotItem>
            <PivotItem Header="History" />
        </Pivot>
    </Grid>
</Page>

